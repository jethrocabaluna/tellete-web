/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MessageRelay, MessageRelayInterface } from "../MessageRelay";

const _abi = [
  {
    inputs: [],
    name: "MessageRelay__AddressAlreadyRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__InvalidMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__InvalidUsername",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__NoMessage",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__NoPublicKey",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__NoUser",
    type: "error",
  },
  {
    inputs: [],
    name: "MessageRelay__UsernameAlreadyExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "fromUsername",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
    ],
    name: "MessageDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "fromAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "toUsername",
        type: "string",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "PublicKeyUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "UserAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "addUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "publicKey",
        type: "string",
      },
    ],
    name: "changeUserPublicKey",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "fromUsername",
        type: "string",
      },
    ],
    name: "deleteMessageFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "fromUsername",
        type: "string",
      },
    ],
    name: "getMessage",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "content",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct MessageRelay.Message",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "getPublicKey",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    name: "getUsername",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "fromUsername",
        type: "string",
      },
    ],
    name: "hasMessageFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "toUsername",
        type: "string",
      },
    ],
    name: "hasMessageTo",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611aa9806100206000396000f3fe6080604052600436106100865760003560e01c8063999d849611610059578063999d84961461014a578063b5ff97cc14610166578063bff90821146101a3578063ce43c032146101e0578063d7554a681461021d57610086565b80630d1317ad1461008b57806310ddb74a146100a75780631b95c00e146100e45780636fb6df4314610121575b600080fd5b6100a560048036038101906100a09190611535565b610246565b005b3480156100b357600080fd5b506100ce60048036038101906100c99190611535565b610490565b6040516100db91906115ac565b60405180910390f35b3480156100f057600080fd5b5061010b60048036038101906101069190611535565b6105d8565b60405161011891906115ac565b60405180910390f35b34801561012d57600080fd5b50610148600480360381019061014391906115c7565b610720565b005b610164600480360381019061015f9190611535565b610879565b005b34801561017257600080fd5b5061018d60048036038101906101889190611535565b6108f5565b60405161019a9190611730565b60405180910390f35b3480156101af57600080fd5b506101ca60048036038101906101c59190611752565b610a7c565b6040516101d791906117e5565b60405180910390f35b3480156101ec57600080fd5b5061020760048036038101906102029190611807565b610b6e565b60405161021491906117e5565b60405180910390f35b34801561022957600080fd5b50610244600480360381019061023f91906115c7565b610c81565b005b600061025182610f91565b90506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546102ec90611863565b80601f016020809104026020016040519081016040528092919081815260200182805461031890611863565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016001820154815250509050600081600001515114156103ba576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006104479190611280565b600182016000905550507feafc7b58cbe9723af1819004d0606ea3f8ab3c9bb72b2f56f87fbcb0f85fe95283856040516104829291906118a4565b60405180910390a150505050565b60008061049c83610f91565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461053790611863565b80601f016020809104026020016040519081016040528092919081815260200182805461056390611863565b80156105b05780601f10610585576101008083540402835291602001916105b0565b820191906000526020600020905b81548152906001019060200180831161059357829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b6000806105e483610f91565b90506000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180604001604052908160008201805461067f90611863565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90611863565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b5050505050815260200160018201548152505090506000816000015151119250505092915050565b61072981611045565b61075f576040517f4cd3f55000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061076a83610f91565b9050600060405180604001604052808481526020016103e84261078d9190611903565b815250905080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908051906020019061082b9291906112c0565b50602082015181600101559050507f0d7fccda06d6eb51c23cbd16d49b9b3f3ebafb002dba1b074895cbb35d0e8130858560405161086a92919061195d565b60405180910390a15050505050565b600061088483610b6e565b90508160028260405161089791906119c9565b908152602001604051809103902090805190602001906108b89291906112c0565b507fb271354cc576cf2f300578d66b29a893ca286f9d22d5a4998cab347543221663836040516108e891906119e0565b60405180910390a1505050565b6108fd611346565b600061090883610f91565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820180546109a390611863565b80601f01602080910402602001604051908101604052809291908181526020018280546109cf90611863565b8015610a1c5780601f106109f157610100808354040283529160200191610a1c565b820191906000526020600020905b8154815290600101906020018083116109ff57829003601f168201915b50505050508152602001600182015481525050905060008160000151511415610a71576040517fe8e1ae7f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b809250505092915050565b60606000600283604051610a9091906119c9565b90815260200160405180910390208054610aa990611863565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad590611863565b8015610b225780601f10610af757610100808354040283529160200191610b22565b820191906000526020600020905b815481529060010190602001808311610b0557829003601f168201915b50505050509050600081511415610b65576040517f85b0bad200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60606000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610bbc90611863565b80601f0160208091040260200160405190810160405280929190818152602001828054610be890611863565b8015610c355780601f10610c0a57610100808354040283529160200191610c35565b820191906000526020600020905b815481529060010190602001808311610c1857829003601f168201915b50505050509050600081511415610c78576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b610c8a82611061565b610cc0576040517ff93d5b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610d0c90611863565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3890611863565b8015610d855780601f10610d5a57610100808354040283529160200191610d85565b820191906000526020600020905b815481529060010190602001808311610d6857829003601f168201915b505050505090506000815114610dc7576040517f7eb8190b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008084604051610dd891906119c9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e6f576040517f2435647e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600085604051610e8091906119c9565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610f1f9291906112c0565b5082600285604051610f3191906119c9565b90815260200160405180910390209080519060200190610f529291906112c0565b507f19ef9a4877199f89440a26acb26895ec02ed86f2df1aeaa90dc18041b892f71f85604051610f8291906119e0565b60405180910390a15050505050565b600080600083604051610fa491906119c9565b908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561103c576040517f8ad1a19d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b600080825111801561105a5750610400825111155b9050919050565b60008082905061010081511180611079575060048151105b1561108857600091505061127b565b6000805b82518110156112745760008382815181106110aa576110a96119fb565b5b602001015160f81c60f81b9050603060f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156111135750603960f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b1580156111795750604160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156111775750605a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156111de5750606160f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916101580156111dc5750607a60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b155b80156112105750605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561122257600094505050505061127b565b605f60f81b817effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614158015611256575082155b1561126057600192505b50808061126c90611a2a565b91505061108c565b5080925050505b919050565b50805461128c90611863565b6000825580601f1061129e57506112bd565b601f0160209004906000526020600020908101906112bc9190611360565b5b50565b8280546112cc90611863565b90600052602060002090601f0160209004810192826112ee5760008555611335565b82601f1061130757805160ff1916838001178555611335565b82800160010185558215611335579182015b82811115611334578251825591602001919060010190611319565b5b5090506113429190611360565b5090565b604051806040016040528060608152602001600081525090565b5b80821115611379576000816000905550600101611361565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113bc82611391565b9050919050565b6113cc816113b1565b81146113d757600080fd5b50565b6000813590506113e9816113c3565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611442826113f9565b810181811067ffffffffffffffff821117156114615761146061140a565b5b80604052505050565b600061147461137d565b90506114808282611439565b919050565b600067ffffffffffffffff8211156114a05761149f61140a565b5b6114a9826113f9565b9050602081019050919050565b82818337600083830152505050565b60006114d86114d384611485565b61146a565b9050828152602081018484840111156114f4576114f36113f4565b5b6114ff8482856114b6565b509392505050565b600082601f83011261151c5761151b6113ef565b5b813561152c8482602086016114c5565b91505092915050565b6000806040838503121561154c5761154b611387565b5b600061155a858286016113da565b925050602083013567ffffffffffffffff81111561157b5761157a61138c565b5b61158785828601611507565b9150509250929050565b60008115159050919050565b6115a681611591565b82525050565b60006020820190506115c1600083018461159d565b92915050565b6000806000606084860312156115e0576115df611387565b5b60006115ee868287016113da565b935050602084013567ffffffffffffffff81111561160f5761160e61138c565b5b61161b86828701611507565b925050604084013567ffffffffffffffff81111561163c5761163b61138c565b5b61164886828701611507565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561168c578082015181840152602081019050611671565b8381111561169b576000848401525b50505050565b60006116ac82611652565b6116b6818561165d565b93506116c681856020860161166e565b6116cf816113f9565b840191505092915050565b6000819050919050565b6116ed816116da565b82525050565b6000604083016000830151848203600086015261171082826116a1565b915050602083015161172560208601826116e4565b508091505092915050565b6000602082019050818103600083015261174a81846116f3565b905092915050565b60006020828403121561176857611767611387565b5b600082013567ffffffffffffffff8111156117865761178561138c565b5b61179284828501611507565b91505092915050565b600082825260208201905092915050565b60006117b782611652565b6117c1818561179b565b93506117d181856020860161166e565b6117da816113f9565b840191505092915050565b600060208201905081810360008301526117ff81846117ac565b905092915050565b60006020828403121561181d5761181c611387565b5b600061182b848285016113da565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061187b57607f821691505b6020821081141561188f5761188e611834565b5b50919050565b61189e816113b1565b82525050565b600060408201905081810360008301526118be81856117ac565b90506118cd6020830184611895565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061190e826116da565b9150611919836116da565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611952576119516118d4565b5b828202905092915050565b60006040820190506119726000830185611895565b818103602083015261198481846117ac565b90509392505050565b600081905092915050565b60006119a382611652565b6119ad818561198d565b93506119bd81856020860161166e565b80840191505092915050565b60006119d58284611998565b915081905092915050565b60006020820190506119f56000830184611895565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611a35826116da565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611a6857611a676118d4565b5b60018201905091905056fea2646970667358221220cf204bf449493296c5aff79afc7f1a78ea663719b86f9be28c12ba43b253a97b64736f6c63430008090033";

type MessageRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessageRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MessageRelay__factory extends ContractFactory {
  constructor(...args: MessageRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MessageRelay> {
    return super.deploy(overrides || {}) as Promise<MessageRelay>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MessageRelay {
    return super.attach(address) as MessageRelay;
  }
  override connect(signer: Signer): MessageRelay__factory {
    return super.connect(signer) as MessageRelay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageRelayInterface {
    return new utils.Interface(_abi) as MessageRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageRelay {
    return new Contract(address, _abi, signerOrProvider) as MessageRelay;
  }
}
